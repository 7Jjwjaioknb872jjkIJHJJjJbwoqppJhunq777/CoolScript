local v0=string.char;local v1=string.byte;local v2=string.sub;local v3=bit32 or bit ;local v4=v3.bxor;local v5=table.concat;local v6=table.insert;local function v7(v24,v25) local v26={};for v41=1, #v24 do v6(v26,v0(v4(v1(v2(v24,v41,v41 + 1 )),v1(v2(v25,1 + (v41% #v25) ,1 + (v41% #v25) + 1 )))%256 ));end return v5(v26);end local v8=tonumber;local v9=string.byte;local v10=string.char;local v11=string.sub;local v12=string.gsub;local v13=string.rep;local v14=table.concat;local v15=table.insert;local v16=math.ldexp;local v17=getfenv or function() return _ENV;end ;local v18=setmetatable;local v19=pcall;local v20=select;local v21=unpack or table.unpack ;local v22=tonumber;local function v23(v27,v28,...) local v29=2 -1 ;local v30;v27=v12(v11(v27,5),v7("\96\250","\59\78\212\54"),function(v42) if (v9(v42,2)==79) then local v100=0;while true do if (0==v100) then v30=v8(v11(v42,1,1));return "";end end else local v101=0;local v102;while true do if (v101==0) then v102=v10(v8(v42,45 -29 ));if v30 then local v122=v13(v102,v30);v30=nil;return v122;else return v102;end break;end end end end);local function v31(v43,v44,v45) if v45 then local v103=(v43/(2^(v44-1)))%(2^(((v45-1) -(v44-(1 -0))) + 1)) ;return v103-(v103%1) ;else local v104=0;local v105;while true do if (v104==0) then v105=2^(v44-1) ;return (((v43%(v105 + v105))>=v105) and (2 -1)) or (619 -(555 + 64)) ;end end end end local function v32() local v46=0;local v47;while true do if (v46==0) then v47=v9(v27,v29,v29);v29=v29 + 1 ;v46=1;end if (v46==1) then return v47;end end end local function v33() local v48,v49=v9(v27,v29,v29 + 2 );v29=v29 + 2 ;return (v49 * 256) + v48 ;end local function v34() local v50=0;local v51;local v52;local v53;local v54;while true do if (v50==1) then return (v54 * (16778143 -(214 + 713))) + (v53 * 65536) + (v52 * 256) + v51 ;end if (v50==0) then v51,v52,v53,v54=v9(v27,v29,v29 + (934 -(857 + 74)) );v29=v29 + (572 -(367 + 201)) ;v50=1;end end end local function v35() local v55=v34();local v56=v34();local v57=1 + 0 ;local v58=(v31(v56,1,20) * (2^32)) + v55 ;local v59=v31(v56,21,31);local v60=((v31(v56,32)==1) and  -1) or (1 + 0) ;if (v59==(877 -(282 + 595))) then if (v58==0) then return v60 * 0 ;else v59=1;v57=0;end elseif (v59==2047) then return ((v58==(1637 -(1523 + 114))) and (v60 * (1/0))) or (v60 * NaN) ;end return v16(v60,v59-1023 ) * (v57 + (v58/((2 + 0)^(73 -21)))) ;end local function v36(v61) local v62=0;local v63;local v64;while true do if (v62==2) then v64={};for v112=1066 -(68 + 997) , #v63 do v64[v112]=v10(v9(v11(v63,v112,v112)));end v62=3;end if (v62==0) then v63=nil;if  not v61 then v61=v34();if (v61==0) then return "";end end v62=1;end if (v62==3) then return v14(v64);end if (1==v62) then v63=v11(v27,v29,(v29 + v61) -1 );v29=v29 + v61 ;v62=2;end end end local v37=v34;local function v38(...) return {...},v20("#",...);end local function v39() local v65={};local v66={};local v67={};local v68={v65,v66,nil,v67};local v69=v34();local v70={};for v78=1,v69 do local v79=0;local v80;local v81;while true do if (1==v79) then if (v80==1) then v81=v32()~=(0 -0) ;elseif (v80==2) then v81=v35();elseif (v80==3) then v81=v36();end v70[v78]=v81;break;end if (v79==0) then v80=v32();v81=nil;v79=1;end end end v68[3]=v32();for v82=1,v34() do local v83=v32();if (v31(v83,1,1)==(117 -(32 + 85))) then local v108=0;local v109;local v110;local v111;while true do if (v108==0) then v109=v31(v83,2,3);v110=v31(v83,4,6);v108=1;end if (v108==3) then if (v31(v110,7 -4 ,3)==(1 -0)) then v111[4]=v70[v111[4]];end v65[v82]=v111;break;end if (v108==1) then v111={v33(),v33(),nil,nil};if (v109==0) then local v125=0;while true do if (v125==0) then v111[3]=v33();v111[4]=v33();break;end end elseif (v109==1) then v111[3]=v34();elseif (v109==2) then v111[3]=v34() -(2^16) ;elseif (v109==3) then v111[3]=v34() -(2^16) ;v111[4]=v33();end v108=2;end if (v108==2) then if (v31(v110,1,1)==1) then v111[1 + 1 ]=v70[v111[2]];end if (v31(v110,2,2)==1) then v111[960 -(892 + 65) ]=v70[v111[3]];end v108=3;end end end end for v84=1,v34() do v66[v84-1 ]=v39();end return v68;end local function v40(v72,v73,v74) local v75=v72[1];local v76=v72[2];local v77=v72[3];return function(...) local v86=v75;local v87=v76;local v88=v77;local v89=v38;local v90=1;local v91= -1;local v92={};local v93={...};local v94=v20("#",...) -1 ;local v95={};local v96={};for v106=0 -0 ,v94 do if (v106>=v88) then v92[v106-v88 ]=v93[v106 + 1 ];else v96[v106]=v93[v106 + 1 ];end end local v97=(v94-v88) + (351 -(87 + 263)) ;local v98;local v99;while true do local v107=0;while true do if (v107==0) then v98=v86[v90];v99=v98[1];v107=1;end if (v107==1) then if (v99<=33) then if (v99<=16) then if (v99<=7) then if (v99<=3) then if (v99<=1) then if (v99>0) then local v136=0;local v137;while true do if (v136==0) then v137=v98[182 -(67 + 113) ];v96[v137]=v96[v137](v21(v96,v137 + 1 ,v98[3]));break;end end else local v138=0;local v139;while true do if (v138==0) then v139=v98[2];v96[v139](v96[v139 + 1 ]);break;end end end elseif (v99>2) then if v96[v98[2 + 0 ]] then v90=v90 + (2 -1) ;else v90=v98[3];end else v96[v98[2 + 0 ]]=v96[v98[3]][v98[15 -11 ]];end elseif (v99<=5) then if (v99>4) then local v142=v98[2];do return v96[v142](v21(v96,v142 + 1 ,v98[3]));end elseif  not v96[v98[954 -(802 + 150) ]] then v90=v90 + 1 ;else v90=v98[3];end elseif (v99>6) then local v143=0;local v144;local v145;local v146;while true do if (v143==0) then v144=v98[2];v145=v96[v144];v143=1;end if (v143==1) then v146=v96[v144 + (5 -3) ];if (v146>0) then if (v145>v96[v144 + (1 -0) ]) then v90=v98[3];else v96[v144 + 3 ]=v145;end elseif (v145<v96[v144 + 1 ]) then v90=v98[3];else v96[v144 + 3 ]=v145;end break;end end else do return;end end elseif (v99<=11) then if (v99<=9) then if (v99>8) then local v147=0;local v148;while true do if (v147==0) then v148=v98[2];v96[v148](v21(v96,v148 + 1 ,v91));break;end end else v96[v98[2]]=v96[v98[3]] + v98[4] ;end elseif (v99>10) then local v150=0;local v151;local v152;local v153;while true do if (v150==2) then for v316=1,v98[4] do local v317=0;local v318;while true do if (v317==1) then if (v318[1]==65) then v153[v316-1 ]={v96,v318[8 -5 ]};else v153[v316-1 ]={v73,v318[3]};end v95[ #v95 + 1 + 0 ]=v153;break;end if (v317==0) then v90=v90 + 1 ;v318=v86[v90];v317=1;end end end v96[v98[2]]=v40(v151,v152,v74);break;end if (0==v150) then v151=v87[v98[3 + 0 ]];v152=nil;v150=1;end if (1==v150) then v153={};v152=v18({},{[v7("\47\105\138\133\130\43\181","\144\112\54\227\235\230\78\205")]=function(v319,v320) local v321=v153[v320];return v321[1][v321[999 -(915 + 82) ]];end,[v7("\140\23\1\249\199\82\189\44\10\228","\59\211\72\111\156\176")]=function(v322,v323,v324) local v325=v153[v323];v325[1][v325[2]]=v324;end});v150=2;end end else local v154=v98[2];local v155,v156=v89(v96[v154](v21(v96,v154 + 1 ,v91)));v91=(v156 + v154) -1 ;local v157=0;for v243=v154,v91 do v157=v157 + 1 ;v96[v243]=v155[v157];end end elseif (v99<=13) then if (v99==12) then local v158=0;local v159;while true do if (v158==0) then v159=v98[2];v96[v159]=v96[v159](v96[v159 + 1 ]);break;end end else local v160=0;local v161;while true do if (v160==0) then v161=v98[2];v96[v161]=v96[v161](v21(v96,v161 + 1 ,v91));break;end end end elseif (v99<=14) then local v162=v98[2];v96[v162]=v96[v162](v21(v96,v162 + 1 ,v98[3]));elseif (v99==15) then v96[v98[2]]=v96[v98[3 -0 ]];else v96[v98[2]]=v96[v98[3]]%v98[4] ;end elseif (v99<=24) then if (v99<=20) then if (v99<=18) then if (v99>(1204 -(1069 + 118))) then v96[v98[2]]=v96[v98[3]]%v98[4] ;else v96[v98[2]]=v73[v98[3]];end elseif (v99>19) then local v167=0;local v168;local v169;while true do if (1==v167) then for v327=v168 + 1 ,v91 do v15(v169,v96[v327]);end break;end if (v167==0) then v168=v98[2];v169=v96[v168];v167=1;end end else v96[v98[2]]=v98[3] + v96[v98[4]] ;end elseif (v99<=22) then if (v99>21) then local v171=0;local v172;while true do if (0==v171) then v172=v98[2];v96[v172]=v96[v172](v96[v172 + 1 ]);break;end end else local v173=v98[2];v96[v173](v21(v96,v173 + (2 -1) ,v91));end elseif (v99==23) then local v174=v98[3 -1 ];local v175,v176=v89(v96[v174](v96[v174 + 1 + 0 ]));v91=(v176 + v174) -1 ;local v177=0;for v246=v174,v91 do v177=v177 + 1 ;v96[v246]=v175[v177];end elseif  not v96[v98[2]] then v90=v90 + 1 ;else v90=v98[3];end elseif (v99<=28) then if (v99<=26) then if (v99==25) then v96[v98[2]]=v96[v98[3]] + v98[4] ;else v96[v98[2]]= #v96[v98[3]];end elseif (v99>27) then local v180=v98[2];local v181,v182=v89(v96[v180](v96[v180 + 1 ]));v91=(v182 + v180) -1 ;local v183=0;for v249=v180,v91 do local v250=0;while true do if (v250==0) then v183=v183 + 1 ;v96[v249]=v181[v183];break;end end end else v90=v98[3];end elseif (v99<=30) then if (v99>29) then v96[v98[2]]=v74[v98[3]];else local v187=0;local v188;local v189;while true do if (v187==0) then v188=v98[2];v189=v96[v98[3]];v187=1;end if (v187==1) then v96[v188 + 1 ]=v189;v96[v188]=v189[v98[4]];break;end end end elseif (v99<=(54 -23)) then for v251=v98[2],v98[3] do v96[v251]=nil;end elseif (v99==32) then v96[v98[2]]=v73[v98[3]];else local v264=v98[2];local v265,v266=v89(v96[v264](v21(v96,v264 + 1 ,v98[3])));v91=(v266 + v264) -1 ;local v267=0;for v301=v264,v91 do v267=v267 + 1 ;v96[v301]=v265[v267];end end elseif (v99<=50) then if (v99<=41) then if (v99<=37) then if (v99<=35) then if (v99==34) then v96[v98[2]][v96[v98[3]]]=v96[v98[4]];else v96[v98[2]][v96[v98[3]]]=v96[v98[4]];end elseif (v99>36) then local v194=0;local v195;while true do if (v194==0) then v195=v98[2];v96[v195]=v96[v195](v21(v96,v195 + 1 ,v91));break;end end else v96[v98[2]]={};end elseif (v99<=39) then if (v99==38) then local v197=v98[2 + 0 ];local v198=v96[v197 + (793 -(368 + 423)) ];local v199=v96[v197] + v198 ;v96[v197]=v199;if (v198>0) then if (v199<=v96[v197 + 1 ]) then local v330=0;while true do if (0==v330) then v90=v98[9 -6 ];v96[v197 + 3 ]=v199;break;end end end elseif (v199>=v96[v197 + 1 ]) then local v331=0;while true do if (v331==0) then v90=v98[3];v96[v197 + (21 -(10 + 8)) ]=v199;break;end end end elseif v96[v98[2]] then v90=v90 + 1 ;else v90=v98[3];end elseif (v99>40) then local v201=v98[2];do return v21(v96,v201,v91);end else v96[v98[2]]=v98[3];end elseif (v99<=45) then if (v99<=43) then if (v99==42) then v96[v98[2]]=v74[v98[3]];else local v206=v98[2];do return v21(v96,v206,v91);end end elseif (v99==44) then v96[v98[7 -5 ]]=v96[v98[445 -(416 + 26) ]]%v96[v98[12 -8 ]] ;else local v208=v98[2];local v209=v96[v98[3]];v96[v208 + 1 + 0 ]=v209;v96[v208]=v209[v98[4]];end elseif (v99<=47) then if (v99==46) then local v213=0;local v214;local v215;local v216;while true do if (v213==1) then v216=v96[v214 + (440 -(145 + 293)) ];if (v216>0) then if (v215>v96[v214 + 1 ]) then v90=v98[433 -(44 + 386) ];else v96[v214 + 3 ]=v215;end elseif (v215<v96[v214 + (1487 -(998 + 488)) ]) then v90=v98[3];else v96[v214 + 3 ]=v215;end break;end if (v213==0) then v214=v98[3 -1 ];v215=v96[v214];v213=1;end end else do return v96[v98[2]]();end end elseif (v99<=48) then local v217=0;local v218;local v219;local v220;local v221;while true do if (v217==1) then v91=(v220 + v218) -1 ;v221=0;v217=2;end if (v217==0) then v218=v98[2];v219,v220=v89(v96[v218](v21(v96,v218 + 1 ,v98[3])));v217=1;end if (v217==2) then for v332=v218,v91 do v221=v221 + 1 ;v96[v332]=v219[v221];end break;end end elseif (v99==49) then local v269=v98[2];local v270=v96[v269 + 2 ];local v271=v96[v269] + v270 ;v96[v269]=v271;if (v270>0) then if (v271<=v96[v269 + 1 ]) then local v349=0;while true do if (v349==0) then v90=v98[3];v96[v269 + 1 + 2 ]=v271;break;end end end elseif (v271>=v96[v269 + 1 ]) then local v350=0;while true do if (v350==0) then v90=v98[3];v96[v269 + 3 + 0 ]=v271;break;end end end else local v273=0;local v274;while true do if (v273==0) then v274=v98[774 -(201 + 571) ];v96[v274](v96[v274 + 1 ]);break;end end end elseif (v99<=58) then if (v99<=54) then if (v99<=52) then if (v99>51) then v90=v98[3];else local v223=0;local v224;local v225;while true do if (v223==0) then v224=v98[1140 -(116 + 1022) ];v225=v96[v224];v223=1;end if (1==v223) then for v335=v224 + 1 ,v91 do v15(v225,v96[v335]);end break;end end end elseif (v99>53) then do return;end elseif (v96[v98[2]]==v98[4]) then v90=v90 + 1 ;else v90=v98[12 -9 ];end elseif (v99<=(33 + 23)) then if (v99>55) then v96[v98[2]]=v96[v98[3]]%v96[v98[4]] ;else v96[v98[2]]=v98[3] + v96[v98[4]] ;end elseif (v99==57) then local v228=v98[2];do return v96[v228](v21(v96,v228 + (3 -2) ,v98[3]));end else v96[v98[2]]=v96[v98[3]][v98[4]];end elseif (v99<=62) then if (v99<=60) then if (v99>59) then v96[v98[2]]={};else local v232=0;local v233;local v234;local v235;while true do if (v232==1) then v235={};v234=v18({},{[v7("\113\184\234\35\74\130\251","\77\46\231\131")]=function(v336,v337) local v338=0;local v339;while true do if (v338==0) then v339=v235[v337];return v339[1][v339[2]];end end end,[v7("\133\107\184\69\173\93\184\68\191\76","\32\218\52\214")]=function(v340,v341,v342) local v343=v235[v341];v343[1][v343[2]]=v342;end});v232=2;end if (v232==2) then for v345=3 -2 ,v98[4] do v90=v90 + 1 ;local v346=v86[v90];if (v346[1]==(924 -(814 + 45))) then v235[v345-1 ]={v96,v346[3]};else v235[v345-1 ]={v73,v346[7 -4 ]};end v95[ #v95 + 1 + 0 ]=v235;end v96[v98[2]]=v40(v233,v234,v74);break;end if (v232==0) then v233=v87[v98[3]];v234=nil;v232=1;end end end elseif (v99>(22 + 39)) then v96[v98[2]]= #v96[v98[3]];elseif (v96[v98[2]]==v98[4]) then v90=v90 + 1 ;else v90=v98[3];end elseif (v99<=64) then if (v99>63) then local v237=v98[2];local v238,v239=v89(v96[v237](v21(v96,v237 + (886 -(261 + 624)) ,v91)));v91=(v239 + v237) -1 ;local v240=0;for v253=v237,v91 do v240=v240 + 1 ;v96[v253]=v238[v240];end else do return v96[v98[2]]();end end elseif (v99<=65) then v96[v98[2]]=v96[v98[3]];elseif (v99==66) then for v314=v98[2],v98[3] do v96[v314]=nil;end else v96[v98[2]]=v98[3];end v90=v90 + (1 -0) ;break;end end end end;end return v40(v39(),{},v28)(...);end return vv17(),...);
